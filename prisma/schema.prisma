// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Device {
  id        Int     @id @default(autoincrement())
  user      String
  uuid      String
  store     String
  device    String
  platform  String
  brand     String
  model     String
  physical  String
  version   String
  screen    String
  package   String
  ip        String
  timestamp BigInt
  updated   Boolean @default(false) // updated to latest version

  @@index([user])
}

model Notification {
  id       Int    @id @default(autoincrement())
  user     String
  device   String
  firebase String @unique

  @@index([user])
}

model NotificationSend {
  id        Int      @id @default(autoincrement())
  user      String
  device    String
  firebase  String
  title     String
  body      String
  sent      Boolean  @default(false)
  createdAt DateTime @default(now())

  @@index([user])
}

model Config {
  id    Int    @id @default(autoincrement())
  key   String
  value String
  store String
}

model FeedbackScore {
  id        Int      @id @default(autoincrement())
  user      String
  score     String
  message   String?
  store     String
  device    String
  ip        String
  createdAt DateTime @default(now())

  @@index([user])
}

model File {
  id       Int    @id @default(autoincrement())
  user     String
  hash     String
  mimeType String
  size     Int
  filename String
  url      String

  @@index([user, hash])
}

model PaymentLog {
  id        Int      @id @default(autoincrement())
  user      String
  factor    String // factor id
  price     Int
  method    String
  data      String?
  payied    Boolean  @default(false)
  createdAt DateTime @default(now())

  @@index([user])
}

model RequestLog {
  id          Int      @id @default(autoincrement())
  node        String
  connection  String   @default("http")
  user        String?
  path        String
  method      String
  params      Json
  response    Json
  code        Int      @default(200)
  cache       Boolean  @default(false)
  requestedAt BigInt   @default(0)
  responsedAt BigInt   @default(0)
  tookedFor   Int      @default(0)
  ip          String
  createdAt   DateTime @default(now())
}

model Campaign {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  message     String
  type        String
  code        String
  redirect    String
  status      String   @default("sending")
  sends       Int      @default(0)
  opens       Int      @default(0)
  createdAt   DateTime @default(now())
}
